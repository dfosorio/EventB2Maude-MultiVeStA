# Generated from EventB.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,64,443,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,1,0,1,0,1,1,
        1,1,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,
        1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
        1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
        1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,
        1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,
        1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
        1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,
        1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,
        1,23,1,23,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
        1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,28,
        1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,31,1,31,
        1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,
        1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,
        1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,40,
        1,40,1,40,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,44,1,44,
        1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,
        1,47,1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,52,
        1,52,1,53,3,53,373,8,53,1,53,4,53,376,8,53,11,53,12,53,377,1,54,
        1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,56,1,56,1,57,1,57,1,57,1,58,
        1,58,1,58,1,58,1,58,3,58,398,8,58,1,59,1,59,1,60,4,60,403,8,60,11,
        60,12,60,404,1,60,1,60,1,61,3,61,410,8,61,1,61,1,61,4,61,414,8,61,
        11,61,12,61,415,1,61,1,61,1,62,5,62,421,8,62,10,62,12,62,424,9,62,
        1,62,1,62,5,62,428,8,62,10,62,12,62,431,9,62,1,63,1,63,5,63,435,
        8,63,10,63,12,63,438,9,63,1,63,1,63,1,63,1,63,1,436,0,64,1,1,3,2,
        5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,
        15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,
        26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,
        37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,
        48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,
        115,58,117,59,119,60,121,61,123,62,125,63,127,64,1,0,6,1,0,48,57,
        2,0,60,60,62,62,2,0,9,9,32,32,2,0,65,90,97,122,5,0,45,45,48,57,65,
        90,95,95,97,122,2,0,10,10,35,35,453,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
        1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,
        0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
        0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,
        0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,
        0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,
        0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,
        0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,
        0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,
        0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,
        0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,
        1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,
        0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,
        0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,1,129,1,0,0,0,3,131,1,0,0,0,5,
        133,1,0,0,0,7,136,1,0,0,0,9,138,1,0,0,0,11,140,1,0,0,0,13,144,1,
        0,0,0,15,146,1,0,0,0,17,148,1,0,0,0,19,151,1,0,0,0,21,153,1,0,0,
        0,23,155,1,0,0,0,25,163,1,0,0,0,27,168,1,0,0,0,29,178,1,0,0,0,31,
        182,1,0,0,0,33,190,1,0,0,0,35,195,1,0,0,0,37,205,1,0,0,0,39,216,
        1,0,0,0,41,231,1,0,0,0,43,237,1,0,0,0,45,244,1,0,0,0,47,250,1,0,
        0,0,49,255,1,0,0,0,51,259,1,0,0,0,53,270,1,0,0,0,55,274,1,0,0,0,
        57,278,1,0,0,0,59,283,1,0,0,0,61,286,1,0,0,0,63,290,1,0,0,0,65,296,
        1,0,0,0,67,305,1,0,0,0,69,309,1,0,0,0,71,313,1,0,0,0,73,318,1,0,
        0,0,75,321,1,0,0,0,77,324,1,0,0,0,79,327,1,0,0,0,81,330,1,0,0,0,
        83,333,1,0,0,0,85,335,1,0,0,0,87,338,1,0,0,0,89,342,1,0,0,0,91,346,
        1,0,0,0,93,351,1,0,0,0,95,357,1,0,0,0,97,360,1,0,0,0,99,363,1,0,
        0,0,101,365,1,0,0,0,103,367,1,0,0,0,105,369,1,0,0,0,107,372,1,0,
        0,0,109,379,1,0,0,0,111,383,1,0,0,0,113,387,1,0,0,0,115,389,1,0,
        0,0,117,397,1,0,0,0,119,399,1,0,0,0,121,402,1,0,0,0,123,413,1,0,
        0,0,125,422,1,0,0,0,127,432,1,0,0,0,129,130,5,123,0,0,130,2,1,0,
        0,0,131,132,5,125,0,0,132,4,1,0,0,0,133,134,5,58,0,0,134,135,5,61,
        0,0,135,6,1,0,0,0,136,137,5,40,0,0,137,8,1,0,0,0,138,139,5,41,0,
        0,139,10,1,0,0,0,140,141,5,124,0,0,141,142,5,45,0,0,142,143,5,62,
        0,0,143,12,1,0,0,0,144,145,5,46,0,0,145,14,1,0,0,0,146,147,5,124,
        0,0,147,16,1,0,0,0,148,149,5,124,0,0,149,150,5,124,0,0,150,18,1,
        0,0,0,151,152,5,64,0,0,152,20,1,0,0,0,153,154,5,59,0,0,154,22,1,
        0,0,0,155,156,5,67,0,0,156,157,5,79,0,0,157,158,5,78,0,0,158,159,
        5,84,0,0,159,160,5,69,0,0,160,161,5,88,0,0,161,162,5,84,0,0,162,
        24,1,0,0,0,163,164,5,83,0,0,164,165,5,69,0,0,165,166,5,84,0,0,166,
        167,5,83,0,0,167,26,1,0,0,0,168,169,5,67,0,0,169,170,5,79,0,0,170,
        171,5,78,0,0,171,172,5,83,0,0,172,173,5,84,0,0,173,174,5,65,0,0,
        174,175,5,78,0,0,175,176,5,84,0,0,176,177,5,83,0,0,177,28,1,0,0,
        0,178,179,5,69,0,0,179,180,5,78,0,0,180,181,5,68,0,0,181,30,1,0,
        0,0,182,183,5,77,0,0,183,184,5,65,0,0,184,185,5,67,0,0,185,186,5,
        72,0,0,186,187,5,73,0,0,187,188,5,78,0,0,188,189,5,69,0,0,189,32,
        1,0,0,0,190,191,5,83,0,0,191,192,5,69,0,0,192,193,5,69,0,0,193,194,
        5,83,0,0,194,34,1,0,0,0,195,196,5,86,0,0,196,197,5,65,0,0,197,198,
        5,82,0,0,198,199,5,73,0,0,199,200,5,65,0,0,200,201,5,66,0,0,201,
        202,5,76,0,0,202,203,5,69,0,0,203,204,5,83,0,0,204,36,1,0,0,0,205,
        206,5,73,0,0,206,207,5,78,0,0,207,208,5,86,0,0,208,209,5,65,0,0,
        209,210,5,82,0,0,210,211,5,73,0,0,211,212,5,65,0,0,212,213,5,78,
        0,0,213,214,5,84,0,0,214,215,5,83,0,0,215,38,1,0,0,0,216,217,5,73,
        0,0,217,218,5,78,0,0,218,219,5,73,0,0,219,220,5,84,0,0,220,221,5,
        73,0,0,221,222,5,65,0,0,222,223,5,76,0,0,223,224,5,73,0,0,224,225,
        5,83,0,0,225,226,5,65,0,0,226,227,5,84,0,0,227,228,5,73,0,0,228,
        229,5,79,0,0,229,230,5,78,0,0,230,40,1,0,0,0,231,232,5,69,0,0,232,
        233,5,86,0,0,233,234,5,69,0,0,234,235,5,78,0,0,235,236,5,84,0,0,
        236,42,1,0,0,0,237,238,5,87,0,0,238,239,5,69,0,0,239,240,5,73,0,
        0,240,241,5,71,0,0,241,242,5,72,0,0,242,243,5,84,0,0,243,44,1,0,
        0,0,244,245,5,87,0,0,245,246,5,72,0,0,246,247,5,69,0,0,247,248,5,
        82,0,0,248,249,5,69,0,0,249,46,1,0,0,0,250,251,5,84,0,0,251,252,
        5,72,0,0,252,253,5,69,0,0,253,254,5,78,0,0,254,48,1,0,0,0,255,256,
        5,65,0,0,256,257,5,78,0,0,257,258,5,89,0,0,258,50,1,0,0,0,259,260,
        5,80,0,0,260,261,5,82,0,0,261,262,5,79,0,0,262,263,5,80,0,0,263,
        264,5,69,0,0,264,265,5,82,0,0,265,266,5,84,0,0,266,267,5,73,0,0,
        267,268,5,69,0,0,268,269,5,83,0,0,269,52,1,0,0,0,270,271,5,78,0,
        0,271,272,5,97,0,0,272,273,5,116,0,0,273,54,1,0,0,0,274,275,5,73,
        0,0,275,276,5,110,0,0,276,277,5,116,0,0,277,56,1,0,0,0,278,279,5,
        66,0,0,279,280,5,111,0,0,280,281,5,111,0,0,281,282,5,108,0,0,282,
        58,1,0,0,0,283,284,5,42,0,0,284,285,5,42,0,0,285,60,1,0,0,0,286,
        287,5,80,0,0,287,288,5,79,0,0,288,289,5,87,0,0,289,62,1,0,0,0,290,
        291,5,101,0,0,291,292,5,109,0,0,292,293,5,112,0,0,293,294,5,116,
        0,0,294,295,5,121,0,0,295,64,1,0,0,0,296,297,5,101,0,0,297,298,5,
        109,0,0,298,299,5,112,0,0,299,300,5,116,0,0,300,301,5,121,0,0,301,
        302,5,114,0,0,302,303,5,101,0,0,303,304,5,108,0,0,304,66,1,0,0,0,
        305,306,5,100,0,0,306,307,5,111,0,0,307,308,5,109,0,0,308,68,1,0,
        0,0,309,310,5,114,0,0,310,311,5,97,0,0,311,312,5,110,0,0,312,70,
        1,0,0,0,313,314,5,99,0,0,314,315,5,97,0,0,315,316,5,114,0,0,316,
        317,5,100,0,0,317,72,1,0,0,0,318,319,5,60,0,0,319,320,5,124,0,0,
        320,74,1,0,0,0,321,322,5,60,0,0,322,323,5,43,0,0,323,76,1,0,0,0,
        324,325,5,124,0,0,325,326,5,62,0,0,326,78,1,0,0,0,327,328,5,46,0,
        0,328,329,5,46,0,0,329,80,1,0,0,0,330,331,5,60,0,0,331,332,5,58,
        0,0,332,82,1,0,0,0,333,334,5,58,0,0,334,84,1,0,0,0,335,336,5,47,
        0,0,336,337,5,58,0,0,337,86,1,0,0,0,338,339,5,92,0,0,339,340,5,115,
        0,0,340,341,5,47,0,0,341,88,1,0,0,0,342,343,5,47,0,0,343,344,5,115,
        0,0,344,345,5,92,0,0,345,90,1,0,0,0,346,347,5,84,0,0,347,348,5,114,
        0,0,348,349,5,117,0,0,349,350,5,101,0,0,350,92,1,0,0,0,351,352,5,
        70,0,0,352,353,5,97,0,0,353,354,5,108,0,0,354,355,5,115,0,0,355,
        356,5,101,0,0,356,94,1,0,0,0,357,358,5,47,0,0,358,359,5,92,0,0,359,
        96,1,0,0,0,360,361,5,92,0,0,361,362,5,47,0,0,362,98,1,0,0,0,363,
        364,5,43,0,0,364,100,1,0,0,0,365,366,5,45,0,0,366,102,1,0,0,0,367,
        368,5,42,0,0,368,104,1,0,0,0,369,370,5,47,0,0,370,106,1,0,0,0,371,
        373,5,45,0,0,372,371,1,0,0,0,372,373,1,0,0,0,373,375,1,0,0,0,374,
        376,7,0,0,0,375,374,1,0,0,0,376,377,1,0,0,0,377,375,1,0,0,0,377,
        378,1,0,0,0,378,108,1,0,0,0,379,380,3,107,53,0,380,381,5,46,0,0,
        381,382,3,107,53,0,382,110,1,0,0,0,383,384,5,109,0,0,384,385,5,111,
        0,0,385,386,5,100,0,0,386,112,1,0,0,0,387,388,5,61,0,0,388,114,1,
        0,0,0,389,390,5,60,0,0,390,391,5,62,0,0,391,116,1,0,0,0,392,398,
        7,1,0,0,393,394,5,62,0,0,394,398,5,61,0,0,395,396,5,60,0,0,396,398,
        5,61,0,0,397,392,1,0,0,0,397,393,1,0,0,0,397,395,1,0,0,0,398,118,
        1,0,0,0,399,400,5,44,0,0,400,120,1,0,0,0,401,403,7,2,0,0,402,401,
        1,0,0,0,403,404,1,0,0,0,404,402,1,0,0,0,404,405,1,0,0,0,405,406,
        1,0,0,0,406,407,6,60,0,0,407,122,1,0,0,0,408,410,5,13,0,0,409,408,
        1,0,0,0,409,410,1,0,0,0,410,411,1,0,0,0,411,414,5,10,0,0,412,414,
        5,13,0,0,413,409,1,0,0,0,413,412,1,0,0,0,414,415,1,0,0,0,415,413,
        1,0,0,0,415,416,1,0,0,0,416,417,1,0,0,0,417,418,6,61,0,0,418,124,
        1,0,0,0,419,421,5,95,0,0,420,419,1,0,0,0,421,424,1,0,0,0,422,420,
        1,0,0,0,422,423,1,0,0,0,423,425,1,0,0,0,424,422,1,0,0,0,425,429,
        7,3,0,0,426,428,7,4,0,0,427,426,1,0,0,0,428,431,1,0,0,0,429,427,
        1,0,0,0,429,430,1,0,0,0,430,126,1,0,0,0,431,429,1,0,0,0,432,436,
        5,35,0,0,433,435,9,0,0,0,434,433,1,0,0,0,435,438,1,0,0,0,436,437,
        1,0,0,0,436,434,1,0,0,0,437,439,1,0,0,0,438,436,1,0,0,0,439,440,
        7,5,0,0,440,441,1,0,0,0,441,442,6,63,0,0,442,128,1,0,0,0,11,0,372,
        377,397,404,409,413,415,422,429,436,1,6,0,0
    ]

class EventBLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    CONTEXT = 12
    SETS = 13
    CONSTANTS = 14
    END = 15
    MACHINE = 16
    SEES = 17
    VARIABLES = 18
    INVARIANTS = 19
    INITIALISATION = 20
    EVENT = 21
    WEIGHT = 22
    WHERE = 23
    THEN = 24
    ANY = 25
    PROPERTIES = 26
    TyNAT = 27
    TyINT = 28
    TyBOOL = 29
    CARTPROD = 30
    POWERSET = 31
    EMPTY = 32
    EMPTYREL = 33
    DOM = 34
    RAN = 35
    CARD = 36
    DOMRES = 37
    OVERR = 38
    RANRES = 39
    INTRANGE = 40
    INCHOICE = 41
    IN = 42
    NOTIN = 43
    UNION = 44
    INTERSECTION = 45
    TRUE = 46
    FALSE = 47
    CONJ = 48
    DISJ = 49
    PLUS = 50
    MINUS = 51
    TIMES = 52
    DIV = 53
    INT = 54
    FLOAT = 55
    MOD = 56
    EQ = 57
    NEQ = 58
    RELSYM = 59
    SEP = 60
    WHITESPACE = 61
    NEWLINE = 62
    ID = 63
    COMMENT = 64

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'{'", "'}'", "':='", "'('", "')'", "'|->'", "'.'", "'|'", "'||'", 
            "'@'", "';'", "'CONTEXT'", "'SETS'", "'CONSTANTS'", "'END'", 
            "'MACHINE'", "'SEES'", "'VARIABLES'", "'INVARIANTS'", "'INITIALISATION'", 
            "'EVENT'", "'WEIGHT'", "'WHERE'", "'THEN'", "'ANY'", "'PROPERTIES'", 
            "'Nat'", "'Int'", "'Bool'", "'**'", "'POW'", "'empty'", "'emptyrel'", 
            "'dom'", "'ran'", "'card'", "'<|'", "'<+'", "'|>'", "'..'", 
            "'<:'", "':'", "'/:'", "'\\s/'", "'/s\\'", "'True'", "'False'", 
            "'/\\'", "'\\/'", "'+'", "'-'", "'*'", "'/'", "'mod'", "'='", 
            "'<>'", "','" ]

    symbolicNames = [ "<INVALID>",
            "CONTEXT", "SETS", "CONSTANTS", "END", "MACHINE", "SEES", "VARIABLES", 
            "INVARIANTS", "INITIALISATION", "EVENT", "WEIGHT", "WHERE", 
            "THEN", "ANY", "PROPERTIES", "TyNAT", "TyINT", "TyBOOL", "CARTPROD", 
            "POWERSET", "EMPTY", "EMPTYREL", "DOM", "RAN", "CARD", "DOMRES", 
            "OVERR", "RANRES", "INTRANGE", "INCHOICE", "IN", "NOTIN", "UNION", 
            "INTERSECTION", "TRUE", "FALSE", "CONJ", "DISJ", "PLUS", "MINUS", 
            "TIMES", "DIV", "INT", "FLOAT", "MOD", "EQ", "NEQ", "RELSYM", 
            "SEP", "WHITESPACE", "NEWLINE", "ID", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "CONTEXT", "SETS", "CONSTANTS", 
                  "END", "MACHINE", "SEES", "VARIABLES", "INVARIANTS", "INITIALISATION", 
                  "EVENT", "WEIGHT", "WHERE", "THEN", "ANY", "PROPERTIES", 
                  "TyNAT", "TyINT", "TyBOOL", "CARTPROD", "POWERSET", "EMPTY", 
                  "EMPTYREL", "DOM", "RAN", "CARD", "DOMRES", "OVERR", "RANRES", 
                  "INTRANGE", "INCHOICE", "IN", "NOTIN", "UNION", "INTERSECTION", 
                  "TRUE", "FALSE", "CONJ", "DISJ", "PLUS", "MINUS", "TIMES", 
                  "DIV", "INT", "FLOAT", "MOD", "EQ", "NEQ", "RELSYM", "SEP", 
                  "WHITESPACE", "NEWLINE", "ID", "COMMENT" ]

    grammarFileName = "EventB.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


